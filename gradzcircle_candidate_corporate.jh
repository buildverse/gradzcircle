entity Job{
	jobTitle String,
    jobDescription String maxlength(10000),
    noOfApplicants Integer,
    salary Double,
    jobStatus Integer,
    createDate ZonedDateTime,
    originalJobCost Double,
    jobCost Double,
    amountPaid Double,
    totalAmountPaid Double,
    noOfApplicantsBought Integer,
    removedFilterAmount Double,
    additionalFilterAmount Double,
    adminCharge Double,
    adminChargeRate Double,
    upfrontDiscountRate Double,
    upfrontDiscountAmount Double,
    escrowAmountUsed Double,
    escrowAmountAdded Double,
    paymentType PaymentType,
    hasBeenEdited Boolean,
    everActive Boolean,
    canEdit Boolean,
    updateDate ZonedDateTime,
    createdBy Long,
    updatedBy Long

}

entity JobHistory{
	jobTitle String,
	jobDescription String maxlength(10000),
    noOfApplicants Integer,
    salary Double,
    jobStatus Integer,
    createDate ZonedDateTime,
    originalJobCost Double,
    jobCost Double,
    amountPaid Double,
    totalAmountPaid Double,
    noOfApplicantsBought Integer,
    removedFilterAmount Double,
    additionalFilterAmount Double,
    adminCharge Double,
    adminChargeRate Double,
    upfrontDiscountRate Double,
    upfrontDiscountAmount Double,
    escrowAmountUsed Double,
    escrowAmountAdded Double,
    paymentType PaymentType,
    hasBeenEdited Boolean,
    everActive Boolean,
    canEdit Boolean,
    updateDate ZonedDateTime,
    createdBy Long,
    updatedBy Long
}

entity AppConfig {
	configName String,
	configValue Boolean
}
entity Filter {
filterName String,
filterCost Double,
comments String
}


entity JobFilter {
	filterDescription String maxlength(10000)
}

entity JobFilterHistory {
	filterDescription String maxlength(10000)
}

entity Candidate {
	firstName String,
	lastName String,
	middleName String,
	facebook String,
	linkedIn String,
	twitter String,
	aboutMe String,
	dateOfBirth LocalDate,
    phoneCode String,
	phoneNumber String,
	differentlyAbled Boolean,
	availableForHiring Boolean,
	openToRelocate Boolean
}

entity Address {
    addressLineOne String,
    addressLineTwo String,
    city String,
    state String,
    zip String
 
}

entity CandidateCertification {
	certificationTitle String,
	certificationDate LocalDate,
	certificationDetails String maxlength(5000)
}

entity CandidateEducation {
	grade Double,
	educationFromDate LocalDate,
	educationToDate LocalDate,
	isPursuingEducation Boolean,
	gradeScale Integer,
	highestQualification Boolean,
	roundOfGrade Integer,
	gradeDecimal Integer,
    capturedCourse String,
    capturedQualification String,
    capturedCollege String,
    capturedUniversity String,
    percentage Double,
    scoreType String,
    educationDuration Integer
}

entity CandidateEmployment {
    location Integer,
    jobTitle String,
    employerName String,
    employmentStartDate LocalDate,
    employmentEndDate LocalDate,
    employmentDuration Integer,
    isCurrentEmployment Boolean,
    jobDescription String maxlength(10000)
    
}

entity CandidateNonAcademicWork {
	nonAcademicInitiativeTitle String,
    nonAcademicInitiativeDescription String maxlength(10000),
  	duration Integer,
    isCurrentActivity Boolean,
    roleInInitiative String,
    nonAcademicWorkStartDate LocalDate,
    nonAcademicWorkEndDate LocalDate
}


entity CandidateProject {
	projectTitle String,
    projectStartDate LocalDate,
    projectEndDate LocalDate,
    projectDescription String maxlength(10000),
    projectDuration Integer,
    contributionInProject String,
    isCurrentProject Boolean,
    projectType ProjectType
}

entity CandidateLanguageProficiency {
   proficiency String
}

entity VisaType {
    visa String
}
	
entity MaritalStatus {
	status String
}

entity EmploymentType {
	employmentType String,
    employmentTypeCost Double
}

entity Qualification {
    qualification String
}

entity Gender {
	gender String
}

entity Course {
	course String
}

entity Country {
	countryName String,
    shortCode String,
    shortCodeThreeChar String,
    countryNiceName String,
    numCode Integer,
    phoneCode Integer,
    enabled Boolean
}

entity Nationality {
	nationality String
}

entity Industry {
    industryName String
}


entity Skills {
	skill String
}

entity JobType {
jobType String,
jobTypeCost Double
}


entity College {
	collegeName String,
    domainName String,/* need to make this unique */
    status Integer
}

entity University{
	universityName String    
}

entity JobCategory {
	jobCategory String
}

entity Language {
	language String
}

entity Audit {
	createdBy Integer,
    updatedBy Integer,
    createdTime ZonedDateTime,
    updatedTime ZonedDateTime
}

enum ProjectType {
ACADEMIC, SELF_INTEREST,CORPORATE
}

enum PaymentType {
	UPFRONT,AS_YOU_GO
}

entity Employability {
	employableSkillName String,
    employabilityScore Integer,
    employabilityPercentile Integer
}

entity Corporate {
	name String,
    address String,
    city String,
    establishedSince LocalDate,
    email String,
    overview String maxlength(10000),
    benefits String maxlength(10000),
    website String,
    facebook String,
    twitter String,
    instagram String,
    linkedIn String,
    culture String,
    contactPerson String,
    phone String,
    phoneCode String,
    personDesignation String,
    tagLine String,
    escrowAmount Double
}

entity ErrorMessages {
    componentName String,
    errorKey String,
    errorMessage String
}

entity CaptureCourse {
	courseName String
}

entity CaptureUniversity {
	universityName String
}

entity CaptureCollege {
	collegeName String
}

entity CaptureQualification {
	qualificationName String
}

relationship OneToOne {
	Candidate {login} to User,
    Corporate {login} to User,
    Country { nationality } to Nationality,
    CaptureQualification {candidateEducation} to CandidateEducation,
    CaptureCollege {candidateEducation} to CandidateEducation,
    CaptureCourse {candidateEducation} to CandidateEducation,
    CaptureUniversity {capturecollege} to CaptureCollege
   
}

relationship OneToMany {
    Candidate { address } to Address,
    Country {address} to Address,
	Candidate {education} to CandidateEducation,
    Candidate {nonAcademic} to CandidateNonAcademicWork,
	Candidate {certification} to CandidateCertification, 
    Qualification  {candidateEducation} to CandidateEducation,
    Course  {candidateEducation} to CandidateEducation,
    College   {candidateEducation} to CandidateEducation,
    Candidate {employment} to CandidateEmployment,
    Candidate {candidateLanguageProficiency} to CandidateLanguageProficiency,
    Language {candidateLanguageProficiency} to CandidateLanguageProficiency,
    University {college} to College,
    Country {university} to University,
    VisaType {candidate} to Candidate,
    JobType {candidateEmployment} to CandidateEmployment,
    EmploymentType {candidateEmployment} to CandidateEmployment,
    Country {candidateEmployment} to CandidateEmployment,
    Country {visa} to VisaType,
    Industry {corporate} to Corporate,
    Country {corporate} to Corporate,
    Corporate {job} to Job {corporate},
    Job {jobFilter} to JobFilter {job},
    Job {history} to JobHistory {job},
    JobFilter{history} to JobFilterHistory{jobFilter}
   
}

relationship ManyToOne {
 	CandidateProject {education} to CandidateEducation {projects} ,
    CandidateProject {employment} to CandidateEmployment {projects},
    Candidate {nationality} to Nationality,
    Candidate {gender} to Gender,
    Candidate {maritalStatus} to MaritalStatus,
    Job {jobType}  to JobType,
    Job {employmentType} to EmploymentType
}

relationship ManyToMany {
	Candidate {jobCategory} to JobCategory {candidate},
	 Candidate {job} to Job {candidate}
   
}


